import pyautogui
import time
import tkinter as tk
from tkinter import simpledialog
import os
import pandas as pd

# Função para obter o código da empresa, o mês e o ano do usuário
def get_user_input():
    root = tk.Tk()
    root.withdraw()  # Esconder a janela principal

    # Solicitar o código da empresa
    company_code = simpledialog.askstring(title="Código da Empresa", prompt="Digite o código da empresa:")

    # Solicitar o mês e o ano
    month_year = simpledialog.askstring(title="Mês e Ano", prompt="Digite o mês e o ano (MMYYYY):")

    return company_code, month_year

# Obter o código da empresa e o mês e o ano do usuário
company_code, month_year = get_user_input()

# Criar a variável day_month_year
day_month_year = '01' + month_year

# Caminho para o executável na rede
network_path = r'\\ap05\modulos\UNICO.EXE'

# Caminho para salvar o CSV
output_csv_path = r'C:\FOLHA\data\output\planilhas\relatorio_ferias.csv'

# Pressionar Win + R
pyautogui.hotkey('win', 'r')
time.sleep(1)  # Esperar um momento para a janela de execução abrir

# Digitar o caminho do executável na rede
pyautogui.typewrite(network_path)
pyautogui.press('enter')

# Esperar 12 segundos para o executável carregar
time.sleep(12)

# Digitar "contabil"
pyautogui.typewrite('contabil')

# Pressionar "tab"
pyautogui.press('tab')

# Digitar "1234"
pyautogui.typewrite('1234')

# Pressionar "enter"
pyautogui.press('enter')

# Esperar um momento para a próxima ação
time.sleep(5)

# Pressionar "Ctrl + 0"
pyautogui.hotkey('ctrl', '0')

# Esperar 10 segundos para a próxima ação
time.sleep(10)

# Pressionar "Alt + R", "O", "F"
pyautogui.hotkey('alt', 'r')
time.sleep(0.5)
pyautogui.press('o')
time.sleep(0.5)
pyautogui.press('f')

# Esperar um momento para a próxima ação
time.sleep(1)

# Digitar o código da empresa
pyautogui.typewrite(company_code)
pyautogui.press('enter')

# Pressionar "tab"
pyautogui.press('tab')

# Digitar o mês e o ano no formato MMYYYY
pyautogui.typewrite(month_year)
pyautogui.press('enter')

# Pressionar "Alt + F8"
pyautogui.hotkey('alt', 'f8')

# Esperar 3 segundos
time.sleep(3)

# Clicar em x=632, y=125
pyautogui.click(x=632, y=125)

# Esperar 0,5 segundos
time.sleep(0.5)

# Clicar em x=735, y=241
pyautogui.click(x=735, y=241)

time.sleep(3)

# Clicar em x=634, y=125
pyautogui.click(x=634, y=125)
time.sleep(1)

time.sleep(5)

# Clicar em x=636, y=219
pyautogui.click(x=636, y=219)
time.sleep(5)

# Pressionar "enter" para salvar o CSV
pyautogui.press('enter')
time.sleep(5)

# Digitar o caminho para salvar o CSV
pyautogui.typewrite(output_csv_path)
time.sleep(5)

pyautogui.press('enter')

# Aguardar um momento para garantir que o arquivo seja salvo
time.sleep(5)

# Verificar se o arquivo foi salvo corretamente
if os.path.exists(output_csv_path):
    print(f"Arquivo CSV salvo em: {output_csv_path}")
else:
    print("Erro ao salvar o arquivo CSV.")

# Ler o CSV e procurar por "(=) Saldo final da conta" na coluna A
df = pd.read_csv(output_csv_path, sep=';', encoding='latin1')

# Substituir os nomes das colunas conforme solicitado
df.rename(columns={
    'Unnamed: 5': 'FERIAS',
    'Unnamed: 11': 'FGTS_f',
    'Unnamed: 16': 'INSS_f',
    'Unnamed: 23': 'PIS_f',
    'Unnamed: 29': 'TOTAL_f'
}, inplace=True)

# Procurar por "(=) Saldo final da conta" na coluna A
saldo_final_row = df[df.iloc[:, 0].str.contains(r"\(=\) Saldo final da conta", na=False)]

# Variáveis para armazenar os dados
saldo_final_valores = None

# Se encontrado, armazenar os valores correspondentes à linha
if not saldo_final_row.empty:
    saldo_final_valores = saldo_final_row[['FERIAS', 'FGTS_f', 'INSS_f', 'PIS_f', 'TOTAL_f']].iloc[0].dropna().to_dict()
    print("Saldo final da conta encontrado. Valores correspondentes:")
    print(saldo_final_valores)
else:
    print("Saldo final da conta não encontrado.")

# Salvar os valores encontrados em um novo CSV
output_csv_path_final = r'C:\FOLHA\data\output\planilhas\saldo_final_valores.csv'
pd.DataFrame([saldo_final_valores]).to_csv(output_csv_path_final, index=False, sep=';')

print(f"Arquivo CSV com valores encontrados salvo em: {output_csv_path_final}")

# Imprimir o caminho do ambiente virtual
print("Caminho do ambiente virtual: c:/FOLHA/.venv/Scripts/python.exe")

time.sleep(3)

pyautogui.hotkey('ctrl', '2')

time.sleep(3)

pyautogui.press('alt')
time.sleep(2)
pyautogui.press('r')
time.sleep(2)
pyautogui.press('c')
time.sleep(2)

pyautogui.typewrite(day_month_year)
time.sleep(2)

# Pressionar "tab" duas vezes
pyautogui.press('tab')
time.sleep(2)
pyautogui.press('tab')
time.sleep(2)

# Digitar "181"
pyautogui.typewrite('181')
pyautogui.press('enter')
time.sleep(2)

# Pressionar "pg dn"
pyautogui.press('pagedown')
time.sleep(2)

pyautogui.click(x=63, y=121)

time.sleep(2)

pyautogui.press('tab')

pyautogui.click(x=37, y=549)

time.sleep(2)

pyautogui.click(x=35, y=463)

time.sleep(2)

pyautogui.click(x=194, y=463)

time.sleep(2)

pyautogui.click(x=373, y=463)

time.sleep(2)

pyautogui.click(x=571, y=463)

time.sleep(2)

pyautogui.click(x=95, y=156)

time.sleep(1)

pyautogui.click(x=95, y=254)

time.sleep(2)

pyautogui.press('enter')

time.sleep(4)

pyautogui.write(r'C:\FOLHA\data\output\planilhas\cc_inss_prov_f')

time.sleep(1)

pyautogui.press('enter')

